// Generated by CodiumAI

import Sinon from 'sinon';
import { searchRateByDate } from './rate.helper.js';
import prisma from '../../modules/database/database.module.js';

describe('searchRateByDate', () => {
	// Returns a DailyExchangeRate object when a valid date is provided
	it('should return a DailyExchangeRate object when a valid date is provided', async () => {
		const validDate = '2022-01-01';
		const expectedRate = { id: 1, date: '2022-01-01', bcvPrice: 1 };

		prisma.dailyExchangeRate.findFirst = Sinon.stub().resolves(expectedRate);

		const result = await searchRateByDate(validDate);

		expect(result).toEqual(expectedRate);
		Sinon.assert.calledOnce(prisma.dailyExchangeRate.findFirst);
	});

	// Returns null when no DailyExchangeRate object is found
	it('should return null when no DailyExchangeRate object is found', async () => {
		const validDate = '2022-01-01';

		prisma.dailyExchangeRate.findFirst = Sinon.stub().resolves(null);

		const result = await searchRateByDate(validDate);

		expect(result).toBeNull();
		Sinon.assert.calledOnce(prisma.dailyExchangeRate.findFirst);
	});

	it('should return a DailyExchangeRate object when no date is provided', async () => {
		const expectedRate = { id: 1, date: '2022-01-01', bcvPrice: 1 };

		prisma.dailyExchangeRate.findFirst = Sinon.stub().resolves(expectedRate);

		const result = await searchRateByDate();

		expect(result).toEqual(expectedRate);
		Sinon.assert.calledOnce(prisma.dailyExchangeRate.findFirst);
	});
});
